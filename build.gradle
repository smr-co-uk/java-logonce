/*
 
To do a release to maven central
	gradlew -P release uploadArchives

To do a snapshot release to maven snapshots
 	gradlew -P snapshot uploadArchives

To install locally
	gradlew uploadArchives
or
	gradlew install
 
 */

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'idea'

defaultTasks 'check'

sourceCompatibility = 11
targetCompatibility = 11
group = 'uk.co.smr'
ext.packaging = 'jar'
version = '0.1.4'

def isReleaseBuild = false
def isDevBuild = true
def sonatypeRepositoryUrl

//set build variables based on build type (release, snapshot, development)
if (hasProperty("release")) {
    println 'Release Build'
    isReleaseBuild = true
	isDevBuild = false
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
} else if (hasProperty("snapshot")) {
    println 'Snapshot Build'
	isDevBuild = false
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots"
} else {
    println 'Dev Build'
	def sonatypeUsername = "myname" 
	def sonatypePassword = "mypasss"
    sonatypeRepositoryUrl = "file://${System.properties['user.home']}/.m2/repository"
}

println 'Repo URL=' + sonatypeRepositoryUrl + ' isDev ' + isDevBuild + ' isRelease ' + isReleaseBuild

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
	mavenLocal()
    ivy {
        url "../gradle.repo"
        layout "maven"
    }
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'
    implementation 'com.google.guava:guava:16.0'
    implementation 'org.slf4j:slf4j-api:1.7.36'
	testImplementation 'io.cucumber:cucumber-java:7.2.3'
	testImplementation 'io.cucumber:cucumber-junit:7.2.3'
    implementation 'com.github.valfirst:jbehave-junit-runner:2.0.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jbehave:jbehave-core:4.8.3'
}

configurations { jbehave }


task cleanOthers(type: Delete) {
	doLast {
		def File srcDir = new File('../' + project.name + '/target')
		def collection = files { srcDir.listFiles() }
		collection.collect { relativePath(it) }.sort().each { println 'deleting... ' + it; delete it }

		// doesn't work :(
		delete 'target'
	}
}

clean.dependsOn cleanOthers

// custom tasks for creating sources jar
task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// custom tasks for creating javadoc jar
task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
    
// add the jars as artifacts
artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
	if (!isDevBuild) {
		sign configurations.archives
	}
}

//publishing {
//	publications {
//		mavenJava(MavenPublication) {
//			pom {
//				name 'Java-LogOnce'
//				packaging 'jar' // does not work?
//				description 'SLF4J Java logging plugin for logging a message once so as not to spam the log file. Its useful for debugging production issues.'
//				url 'https://github.com/smr-co-uk/java-logonce'
//
//				scm {
//					url 'scm:git@github.com:smr-co-uk/java-logonce.git'
//					connection 'scm:git@github.com:smr-co-uk/java-logonce.git'
//					developerConnection 'scm:git@github.com:smr-co-uk/java-logonce.git'
//				}
//
//				licenses {
//					license {
//						name 'GNU GPL, Version 2.0'
//						url 'https://github.com/smr-co-uk/java-logonce/blob/master/LICENSE'
//						distribution 'repo'
//					}
//				}
//
//				developers {
//					developer {
//						id 'PeterLappo'
//						name 'Peter Lappo'
//					}
//				}
//			}
//		}
//	}
//}

//tasks.publishing.dependsOn javadocJar, sourcesJar, jar



//uploadArchives {
//	repositories {
//		mavenDeployer {
//			if (isReleaseBuild) {
//				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//			}
//
//			repository(url: sonatypeRepositoryUrl) {
//				if (!isDevBuild) {
//					authentication(userName: sonatypeUsername, password: sonatypePassword)
//				}
//			}
//
//			pom {
//				project {
//					name 'Java-LogOnce'
//					packaging 'jar' // does not work?
//					description 'SLF4J Java logging plugin for logging a message once so as not to spam the log file. Its useful for debugging production issues.'
//					url 'https://github.com/smr-co-uk/java-logonce'
//
//					scm {
//						url 'scm:git@github.com:smr-co-uk/java-logonce.git'
//						connection 'scm:git@github.com:smr-co-uk/java-logonce.git'
//						developerConnection 'scm:git@github.com:smr-co-uk/java-logonce.git'
//					}
//
//					licenses {
//						license {
//							name 'GNU GPL, Version 2.0'
//							url 'https://github.com/smr-co-uk/java-logonce/blob/master/LICENSE'
//							distribution 'repo'
//						}
//					}
//
//					developers {
//						developer {
//							id 'PeterLappo'
//							name 'Peter Lappo'
//						}
//					}
//				}
//				// hack to add packaging
//				withXml { root ->
//					def children = root.asNode().children()
//					def versionIndex = children.indexOf(children.find {it.name().localPart == 'version'})
//					children.add(versionIndex + 1, new Node(null, 'packaging', 'jar'))
//				}
//			}
//		}
//	}
//}

